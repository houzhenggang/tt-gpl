#!/bin/bash

##
## gen_key_pair - create a DSA public/private key pair
##
## 2009-11-11 Ard Biesheuvel <ard.biesheuvel@tomtom.com>
##

ENC=""

P="."

[ $# -lt 3 ] || P=$3

case "$1" in
	kernel)
	ENC="gpg"
	;;
	rootfs|loopfs)
	ENC="gpg"
	;;
	*)
	echo "Argument 1 should be key domain: kernel, rootfs or loopfs"
	exit
	;;
esac

CLASS="$2"

case "$CLASS" in
	dev)
	ENC=""
	;;
	production)
	CLASS="prod"
	;;
	*)
	echo "Argument 2 should be key type: dev or production"
	exit
	;;
esac

PUBKEY=$P/tt_$1_${CLASS}_pubkey.dsa
PRIVKEY=$P/tt_$1_${CLASS}_privkey.dsa

case "$ENC" in
	gpg)

	GPG_OPTS="--no-default-keyring --keyring $P/$1_keyring.gpg --batch --trust-model always"
	GPG_RECIPIENTS=""

	export GNUPGHOME=$P

	for R in `gpg $GPG_OPTS --list-keys |grep ^pub |sed 's|^.*/\(.*\) .*|\1|' | awk '{print $1}'`
	do
		GPG_RECIPIENTS="$GPG_RECIPIENTS -r $R"
	done

	rm -f $PUBKEY $PRIVKEY.gpg

	openssl dsaparam -genkey 2048 					| \
		tee >(openssl dsa -pubout -out $PUBKEY)			| \
		gpg $GPG_OPTS $GPG_RECIPIENTS -e -o $PRIVKEY.gpg
	;;
	*)
	openssl dsaparam -genkey 2048					| \
		tee >(openssl dsa -pubout -out $PUBKEY)			| \
		openssl dsa $ENC -out $PRIVKEY 2> /dev/null
	;;
esac

